import {parseUnits} from 'ethers/lib/utils';
import {RAY_DECIMALS} from '../../constants';
import {
  Address,
  EthereumConfiguration,
  EthereumNetworkConfig,
  EthereumPoolAsset,
  NativeCurrency,
  Network,
} from '../../types';
import assetPrice from './asset-price.json';
import {baseConfig} from './commons';
import {
  rateStrategyAAVE,
  rateStrategyETH,
  rateStrategyStableOne,
  rateStrategyStableThree,
  rateStrategyStableTwo,
  rateStrategyVolatileFour,
  rateStrategyVolatileOne,
  rateStrategyVolatileThree,
  rateStrategyVolatileTwo,
} from './rateStrategies';
import {
  reserveConfigBAT,
  reserveConfigBUSD,
  reserveConfigDAI,
  reserveConfigLINK,
  reserveConfigUNI,
  reserveConfigUSDC,
  reserveConfigUSDT,
  reserveConfigWBTC,
  reserveConfigWETH,
  reserveConfigYFI,
  reserveConfigZRX,
} from './reservesConfigs';

export const ethereumMainConfig: EthereumConfiguration = {
  ...baseConfig,
  marketId: 'Ethereum Main Market',
  nativeCurrency: NativeCurrency.ETH,
  addressProviderId: 1, // main market in Ethereum
  reserveConfig: {
    BAT: reserveConfigBAT,
    BTC: reserveConfigWBTC,
    BUSD: reserveConfigBUSD,
    DAI: reserveConfigDAI,
    LINK: reserveConfigLINK,
    UNI: reserveConfigUNI,
    USDC: reserveConfigUSDC,
    USDT: reserveConfigUSDT,
    WNATIVE: reserveConfigWETH,
    YFI: reserveConfigYFI,
    ZRX: reserveConfigZRX,
  },
  assetName: {
    BAT: 'Basic Attention Token',
    BTC: 'Bitcoin',
    BUSD: 'Binance USD',
    DAI: 'DAI',
    LINK: 'Chainlink',
    UNI: 'Uniswap',
    USDC: 'Usd Circle',
    USDT: 'Usd Tether',
    WNATIVE: 'Ethereum',
    YFI: 'Yearn Finance',
    ZRX: '0x',
  },
  interestRateStrategies: [
    rateStrategyStableOne,
    rateStrategyStableTwo,
    rateStrategyStableThree,
    rateStrategyETH,
    rateStrategyAAVE,
    rateStrategyVolatileOne,
    rateStrategyVolatileTwo,
    rateStrategyVolatileThree,
    rateStrategyVolatileFour,
  ],
  reserveAsset: {
    [Network.localhost]: {} as EthereumPoolAsset<Address>,
    [Network.kovan]: {} as EthereumPoolAsset<Address>,
    [Network.ropsten]: {} as EthereumPoolAsset<Address>,
    [Network.mainnet]: {} as EthereumPoolAsset<Address>,
    [Network.tenderlyMain]: {} as EthereumPoolAsset<Address>,
  },
  initialMarketRate: {
    BAT: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    BUSD: {borrowRate: parseUnits('0.05', RAY_DECIMALS)},
    DAI: {borrowRate: parseUnits('0.039', RAY_DECIMALS)},
    LINK: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    UNI: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    USDC: {borrowRate: parseUnits('0.039', RAY_DECIMALS)},
    USDT: {borrowRate: parseUnits('0.035', RAY_DECIMALS)},
    BTC: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    WNATIVE: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    YFI: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
    ZRX: {borrowRate: parseUnits('0.03', RAY_DECIMALS)},
  },
  // contracts
  providerRegistry: {
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.localhost]: '',
    [Network.tenderlyMain]: '',
  },
  addressProvider: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  lendingRateOracle: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  weth: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  wethGateway: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  mainOracle: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  fallbackOracle: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  chainlinkAggregator: {
    [Network.localhost]: {} as EthereumPoolAsset<Address>,
    [Network.kovan]: {} as EthereumPoolAsset<Address>,
    [Network.ropsten]: {} as EthereumPoolAsset<Address>,
    [Network.mainnet]: {} as EthereumPoolAsset<Address>,
    [Network.tenderlyMain]: {} as EthereumPoolAsset<Address>,
  },
  bandStdReference: {} as EthereumNetworkConfig<Address>,
  reserveFactorTreasuryAddress: {
    [Network.localhost]: '0xe6f274FAA5438910e26BE344593592A7aDB5DF33',
    [Network.kovan]: '0xe6f274FAA5438910e26BE344593592A7aDB5DF33',
    [Network.ropsten]: '0xe6f274FAA5438910e26BE344593592A7aDB5DF33',
    [Network.mainnet]: '0xe6f274FAA5438910e26BE344593592A7aDB5DF33',
    [Network.tenderlyMain]: '0xe6f274FAA5438910e26BE344593592A7aDB5DF33',
  },
  protocolDataProvider: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  appDataProvider: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  // users and treasury
  poolAdmin: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  emergencyAdmin: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  providerRegistryOwner: {
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.localhost]: '',
    [Network.tenderlyMain]: '',
  },
  tokenDistributor: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
  // block explorer
  blockExplorerUrl: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: 'https://etherscan.com/tx',
    [Network.tenderlyMain]: '',
  },
  mockPoolAssetPrice: assetPrice,
  uniswapRouter: {
    [Network.localhost]: '',
    [Network.kovan]: '',
    [Network.ropsten]: '',
    [Network.mainnet]: '',
    [Network.tenderlyMain]: '',
  },
};

export default ethereumMainConfig;
